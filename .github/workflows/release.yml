# SPDX-FileCopyrightText: 2017 Scott Shawcroft, written for Adafruit Industries
# SPDX-FileCopyrightText: 2023 Jan Delgado
#
# SPDX-License-Identifier: MIT

name: Release Actions

on:
  release:
    types: [published]

jobs:
  upload-release-assets:
    runs-on: ubuntu-latest
    steps:
    - name: Translate Repo Name For Build Tools filename_prefix
      id: repo-name
      run: |
        echo ::set-output name=repo-name::$(
        echo ${{ github.repository }} |
        awk -F '\/' '{ print tolower($2) }' |
        tr '_' '-'
        )
    - name: Set up Python 3.x
      uses: actions/setup-python@v2
      with:
        python-version: "3.x"
    - name: Versions
      run: |
        python3 --version
    - name: Checkout Current Repo
      uses: actions/checkout@v3
      with:
        submodules: true
    - name: Checkout tools repo
      uses: actions/checkout@v3
      with:
        repository: adafruit/actions-ci-circuitpython-libs
        path: actions-ci
    - name: Install deps
      run: |
        source actions-ci/install.sh
    - name: Build assets
      run: circuitpython-build-bundles --filename_prefix ${{ steps.repo-name.outputs.repo-name }} --package_folder_prefix "" --library_location .
    - name: Upload Release Assets
      # the 'official' actions version does not yet support dynamically
      # supplying asset names to upload. @csexton's version chosen based on
      # discussion in the issue below, as its the simplest to implement and
      # allows for selecting files with a pattern.
      # https://github.com/actions/upload-release-asset/issues/4
      #uses: actions/upload-release-asset@v1.0.1
      uses: csexton/release-asset-action@f68e958070de0b5eaeec26ea045fa25db6d5abcd
      with:
        pattern: "bundles/*"
        github-token: ${{ secrets.GITHUB_TOKEN }}

  upload-docs:
    runs-on: ubuntu-latest
    steps:
    - name: Set up Python 3.x
      uses: actions/setup-python@v2
      with:
        python-version: "3.x"
    - name: Checkout Current Repo
      uses: actions/checkout@v3
    - name: Build documentation
      run: |
        pip install ".[optional]"
        cd docs
        sphinx-build -E -W   -b html . _build/html
    - name: Upload documentation
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs/_build/html

  upload-pypi:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade build twine
    - name: Build
      run: |
        # fix image links in README.rst for display in pypi
        sed -i -e "s/\.images\//https:\/\/cdn.jsdelivr.net\/gh\/jandelgado\/jled-circuitpython@${{github.event.release.tag_name}}\/.images\//g" README.rst
        cat README.rst
        for file in $(find -not -path "./.*" -not -path "./docs*" \( -name "*.py" -o -name "*.toml" \) ); do
            sed -i -e "s/0.0.0+auto.0/${{github.event.release.tag_name}}/" $file;
        done;
        python -m build
    - name: Publish to test.pypi.org
      env:
        TWINE_USERNAME: "__token__"
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
      run: |
        # twine upload --repository testpypi dist/*
    - name: Publish to PyPi
      env:
        TWINE_USERNAME: "__token__"
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        echo TODO
        twine upload dist/*
